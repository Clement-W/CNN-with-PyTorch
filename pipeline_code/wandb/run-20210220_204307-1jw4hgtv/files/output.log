Downloading http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz to data/MNIST/raw/train-images-idx3-ubyte.gz
0it [00:00, ?it/s]  0%|          | 0/9912422 [00:00<?, ?it/s]  0%|          | 16384/9912422 [00:00<01:00, 163816.72it/s]  0%|          | 40960/9912422 [00:00<01:16, 129450.23it/s]  4%|▍         | 434176/9912422 [00:00<00:07, 1310242.25it/s]  6%|▋         | 630784/9912422 [00:00<00:06, 1377546.06it/s]  8%|▊         | 802816/9912422 [00:00<00:06, 1427288.43it/s] 11%|█▏        | 1130496/9912422 [00:01<00:04, 1765942.84it/s] 13%|█▎        | 1310720/9912422 [00:01<00:05, 1706620.55it/s] 15%|█▌        | 1490944/9912422 [00:01<00:04, 1718630.50it/s] 17%|█▋        | 1662976/9912422 [00:01<00:05, 1460271.07it/s] 20%|█▉        | 1974272/9912422 [00:01<00:04, 1867563.90it/s] 24%|██▍       | 2375680/9912422 [00:01<00:03, 2321820.06it/s] 27%|██▋       | 2711552/9912422 [00:01<00:02, 2591908.34it/s] 30%|███       | 2981888/9912422 [00:01<00:03, 2306604.91it/s] 34%|███▎      | 3325952/9912422 [00:02<00:02, 2459265.71it/s] 36%|███▌      | 3588096/9912422 [00:02<00:02, 2376048.14it/s] 40%|███▉      | 3923968/9912422 [00:02<00:02, 2411580.23it/s] 42%|████▏     | 4169728/9912422 [00:02<00:02, 2345484.41it/s] 45%|████▍     | 4440064/9912422 [00:02<00:02, 2433174.39it/s] 48%|████▊     | 4734976/9912422 [00:02<00:02, 2512404.75it/s] 50%|█████     | 4988928/9912422 [00:02<00:02, 2417476.15it/s] 54%|█████▍    | 5357568/9912422 [00:02<00:01, 2366849.27it/s] 58%|█████▊    | 5767168/9912422 [00:03<00:01, 2664066.78it/s] 61%|██████    | 6037504/9912422 [00:03<00:01, 2486057.48it/s] 65%|██████▍   | 6414336/9912422 [00:03<00:01, 2699102.52it/s] 68%|██████▊   | 6692864/9912422 [00:03<00:01, 2539180.41it/s] 70%|███████   | 6955008/9912422 [00:03<00:01, 2553904.09it/s] 73%|███████▎  | 7282688/9912422 [00:03<00:01, 2508058.99it/s] 77%|███████▋  | 7634944/9912422 [00:03<00:00, 2761884.49it/s] 80%|███████▉  | 7921664/9912422 [00:03<00:00, 2624789.60it/s] 83%|████████▎ | 8192000/9912422 [00:04<00:00, 2541852.84it/s] 85%|████████▌ | 8454144/9912422 [00:04<00:00, 2517479.95it/s] 89%|████████▊ | 8773632/9912422 [00:04<00:00, 2687948.11it/s] 91%|█████████▏| 9052160/9912422 [00:04<00:00, 2574083.11it/s] 94%|█████████▍| 9314304/9912422 [00:04<00:00, 2418661.86it/s] 98%|█████████▊| 9691136/9912422 [00:04<00:00, 2558068.72it/s]Extracting data/MNIST/raw/train-images-idx3-ubyte.gz to data/MNIST/raw

Downloading http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz to data/MNIST/raw/train-labels-idx1-ubyte.gz
0it [00:00, ?it/s][A
  0%|          | 0/28881 [00:00<?, ?it/s][AExtracting data/MNIST/raw/train-labels-idx1-ubyte.gz to data/MNIST/raw
Downloading http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz to data/MNIST/raw/t10k-images-idx3-ubyte.gz


0it [00:00, ?it/s][A[A

  0%|          | 0/1648877 [00:00<?, ?it/s][A[A

  2%|▏         | 40960/1648877 [00:00<00:05, 297142.18it/s][A[A

 11%|█▏        | 188416/1648877 [00:00<00:01, 896342.81it/s][A[A

 26%|██▌       | 425984/1648877 [00:00<00:00, 1464652.71it/s][A[A

 52%|█████▏    | 851968/1648877 [00:00<00:00, 2458405.57it/s][A[AExtracting data/MNIST/raw/t10k-images-idx3-ubyte.gz to data/MNIST/raw
Downloading http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz to data/MNIST/raw/t10k-labels-idx1-ubyte.gz



0it [00:00, ?it/s][A[A[A


Extracting data/MNIST/raw/t10k-labels-idx1-ubyte.gz to data/MNIST/raw
  0%|          | 0/4542 [00:00<?, ?it/s][A[A[AProcessing...
/home/clement/.local/lib/python3.8/site-packages/torchvision/datasets/mnist.py:480: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /pytorch/torch/csrc/utils/tensor_numpy.cpp:141.)
  return torch.from_numpy(parsed.astype(m[2], copy=False)).view(*s)
Done!
9920512it [00:07, 1402295.94it/s]                             
32768it [00:02, 16256.55it/s]            
1654784it [00:01, 1071513.10it/s]                            
8192it [00:00, 12837.33it/s]            
Network(
  (net): Sequential(
    (0): ConvBlock(
      (block): Sequential(
        (0): Conv2d(1, 16, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): ReLU()
        (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      )
    )
    (1): ConvBlock(
      (block): Sequential(
        (0): Conv2d(16, 32, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): ReLU()
        (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      )
    )
    (2): ConvBlock(
      (block): Sequential(
        (0): Conv2d(32, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): ReLU()
        (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      )
    )
    (3): Flatten(start_dim=1, end_dim=-1)
    (4): FullyConnectedBlock(
      (block): Sequential(
        (0): Linear(in_features=576, out_features=10, bias=True)
      )
    )
  )
)
  0%|          | 0/469 [00:00<?, ?it/s]
  0%|          | 0/79 [00:00<?, ?it/s]
Accuracy on test set: 98.76
  0%|          | 0/469 [00:00<?, ?it/s]
